/* Copyright © 2022, Medelför OÜ. All rights reserved. */

#pragma once

#include "Type.h"

namespace PrimitiveType
{
    enum class EPrimitiveType
    {
        Float,
        Double,
        Byte,
        Int,
        Int64,
        Bool,
        String,
        Text,
        Name,
        Undefined
    };
}  // namespace PrimitiveType

class UNREALISTICDOCS_API FPrimitiveType : public FType
{
public:
    PrimitiveType::EPrimitiveType GetPrimitiveType() const
    {
        return PrimitiveType;
    }

    void SetPrimitiveType(PrimitiveType::EPrimitiveType NewPrimitiveType)
    {
        this->PrimitiveType = NewPrimitiveType;
    }

    void Accept(ITypeVisitor& Visitor) const override
    {
        Visitor.Visit(*this);
    }

    FString GetAutoGeneratedValueTransliteration() const override;

    ~FPrimitiveType() override = default;

private:
    static const FString AutogeneratedBoolValue;
    static const FString AutogeneratedRealValue;
    static const FString AutogeneratedIntegralValue;
    static const FString AutogeneratedStringValue;
    static const FString AutogeneratedTextValue;
    static const FString AutogeneratedNameValue;
    static const FString AutogeneratedUndefinedValue;

    PrimitiveType::EPrimitiveType PrimitiveType =
        PrimitiveType::EPrimitiveType::Undefined;
};
